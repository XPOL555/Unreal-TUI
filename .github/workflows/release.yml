name: Release (on tag)

on:
  push:
    tags:
      - "v*"   # es: v0.1.0

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
#          - os: ubuntu-latest
#            target: x86_64-unknown-linux-gnu
#            archive: tar.gz
#          - os: macos-latest
#            target: x86_64-apple-darwin
#            archive: tar.gz
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            archive: zip

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - name: Build (release)
        run: cargo build --release --target ${{ matrix.target }}

      - name: Package artifacts
        shell: bash
        run: |
          APP_NAME=$(basename "$(pwd)")
          BIN_NAME="$APP_NAME"
          OUTDIR="target/${{ matrix.target }}/release"
          PKGDIR="${APP_NAME}-${GITHUB_REF_NAME}-${{ matrix.target }}"
          mkdir -p "$PKGDIR"
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            cp "$OUTDIR/${BIN_NAME}.exe" "$PKGDIR/"
          else
            cp "$OUTDIR/${BIN_NAME}" "$PKGDIR/"
          fi
          [ -f README.md ] && cp README.md "$PKGDIR/"
          [ -f LICENSE* ] && cp LICENSE* "$PKGDIR/" || true

          if [[ "${{ matrix.archive }}" == "zip" ]]; then
            7z a "${PKGDIR}.zip" "$PKGDIR" > /dev/null
            echo "ASSET=${PKGDIR}.zip" >> $GITHUB_ENV
          else
            tar -czf "${PKGDIR}.tar.gz" "$PKGDIR"
            echo "ASSET=${PKGDIR}.tar.gz" >> $GITHUB_ENV
          fi

      - name: Checksum
        shell: bash
        run: |
          if command -v shasum >/dev/null; then
            shasum -a 256 "$ASSET" > "${ASSET}.sha256"
          else
            certutil -hashfile "$ASSET" SHA256 | sed -n '2p' | tr -d '\r' > "${ASSET}.sha256"
          fi

      - name: Upload release asset
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ${{ env.ASSET }}
            ${{ env.ASSET }}.sha256
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
